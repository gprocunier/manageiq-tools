---
- set_fact:
    collectionHash: '{{ hostvars[item][reference] }}'
  with_items:
    - "{{ groups['primaryAppliance'] }}"
  no_log: true

- name: Query and store existing configuration_script_sources
  uri:
    url: https://"{{ groups['primaryAppliance'][0] | default('https://localhost') }}"/api/configuration_script_sources?expand=resources&filter[]=type=ManageIQ::Providers::AnsibleTower::AutomationManager::ConfigurationScriptSource&attributes=id,name
    method: GET
    headers:
      X-Auth-Token: "{{ collectionHash['loginCookie'] }}"
    validate_certs: no
    status_code: 200
  register: ___miq_register_configuration_script_sources
  no_log: true

- name: create service template map
  set_fact:
    ___miq_data_configScriptMap: '{{ ___miq_data_configScriptMap | default({}) | combine( { item.name: item.id } ) }}'
  with_items:
    - "{{ ___miq_register_configuration_script_sources.json.resources }}"
  no_log: true

- set_fact:
    tmpHash: "{{ tmpHash | default({}) | combine( { item.key: item.value } ) }}"
  with_dict:
    - "{{ collectionHash }}"
    - { 'configurationScriptSourceMap': '{{ data }}' }
  vars:
    data: "{{ ___miq_data_configScriptMap }}"
  no_log: true

- set_fact:
    "{{ reference }}": '{{ tmpHash }}'
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['primaryAppliance'] }}"
  no_log: true
